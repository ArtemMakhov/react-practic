{"version":3,"file":"static/js/8.91c04bf6.chunk.js","mappings":"yOAAaA,EAAY,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC9B,OACI,0BACI,kBACIC,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,aCkCjD,EAlCmB,WAAO,IAAD,EACfK,GAAYC,EAAAA,EAAAA,MAClB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAElDC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAeC,KAAKR,KACrB,IAEH,IAIMS,GAAmBC,EAAAA,EAAAA,UAAQ,WAC7B,OAAOX,EAAUY,QAAO,SAAAC,GAAQ,OAC5BA,EAASC,KAAKC,cAAcC,SAASX,EAAYY,0BAEtD,CAACjB,EAAWK,IAEf,OAAO,6BACH,SAACd,EAAD,CAAWC,MAAOa,EAAaZ,SAXd,SAAAD,GACjBY,EAA0B,KAAVZ,EAAe,CAAEoB,OAAQpB,GAAU,OAWlDkB,EAAiBQ,OAAS,IACvB,wBACKR,EAAiBS,KAAI,SAAAN,GAAQ,OAC1B,yBACI,SAAC,KAAD,CAAMO,GAAE,UAAKP,EAASQ,IAAOC,MAAO,CAACC,KAAM1B,GAA3C,SAAuDgB,EAASC,QAD3DD,EAASQ","sources":["components/SearchBox.jsx","pages/Customers/Customers.jsx"],"sourcesContent":["export const SearchBox = ({value, onChange}) => {\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={value}\n                onChange={e => onChange(e.target.value)} />\n     </div>\n )   \n}","import { getCustomers } from \"components/fakeApi\";\nimport { useMemo } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { SearchBox } from \"../../components/SearchBox\";\n\n const Customers = () => {\n    const lacation =  useLocation();\n    const [customers, setCustomers] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const filterParam = searchParams.get('filter') ?? \"\";\n\n    useEffect(() => {\n        getCustomers().then(setCustomers);\n    }, []);\n    \n    const changeFilter = value => {\n        setSearchParams(value !== '' ? { filter: value } : {});\n    };\n\n    const visibleCustomers = useMemo(() => {\n        return customers.filter(customer =>\n            customer.name.toLowerCase().includes(filterParam.toLocaleLowerCase())\n        );\n    }, [customers, filterParam]);\n\n    return <main>\n        <SearchBox value={filterParam} onChange={changeFilter} />\n        {visibleCustomers.length > 0 && (\n            <ul>\n                {visibleCustomers.map(customer => (\n                    <li key={customer.id}>\n                        <Link to={`${customer.id }`} state={{from: lacation}}>{customer.name}</Link>\n                    </li>\n                ))}\n            </ul>\n        )}\n    </main>;\n};\n\nexport default Customers;"],"names":["SearchBox","value","onChange","type","e","target","lacation","useLocation","useState","customers","setCustomers","useSearchParams","searchParams","setSearchParams","filterParam","get","useEffect","getCustomers","then","visibleCustomers","useMemo","filter","customer","name","toLowerCase","includes","toLocaleLowerCase","length","map","to","id","state","from"],"sourceRoot":""}